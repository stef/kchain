* kchain
... is a set of scripts that help to keep all encryption keys on
a USB stick, create encrypted containers, and linking directories from
the key to other locations (e.g. remapping ~/.gnupg).

** Components
*** kchain
    This is the main dispatcher, it reacts to the addition/removal of
    the key. After successful mounting of the key under $keyroot, the
    files in $keyroot/.kchain/rules.d are being executed. Two rules
    exist: activate-dirmap and mount-images.
*** lock-key
    Cleanly deactivates all rules and the key. Should also be invoked
    by kchain when it detects the remove event of the USB stick.
    Bind this to a key in your wm, or to the ACPI event lidclose.
*** activate-dirmap
    One of the rules used by kchain. Activates a dirmap, see
    create-dirmap below. Can be reversed using a 'de' parameter.
*** create-dirmap
    Moves the local directory to a new location, creates a softlink
    back to the original name. And sets up a config that automatically
    replaces the link to the local directory to a link pointing to an
    alternative location, e.g.:
#+begin_src sh
create-dirmap ~/.irssi/otr ~/.keyroot/irssi-otr
#+end_src
    The original ~/.irssi/otr is renamed to ~/.irssi/otr.local, a link
    from ~/.irssi/otr.local to ~/.irssi/otr is created, and an entry
    in $keyroot/.kchain/conf.d/dirmap is created.

    You should put something in the alternative directory, otherwise
    when this gets activated, the directory will be empty.
*** mount-images
    The other of the rules used by kchain. Automatically mounts
    encrypted containers. See create-image and drop-image below.
*** create-image
    creates a new encrypted container and sets it up for automatic
    mounting by kchain. Invoke with:
#+begin_src sh
# create-image $PWD/test.img 10 $PWD/test.key test /mnt
#+end_src
    Which creates an image $PWD/test.img which is 10MByte big, also
    creates a random key at $PWD/test.key, calls the whole image
    'test' and sets it up for automatic mounting under '/mnt'
*** umount-images
    Called by lock-key. Umounts all images or only parameters.
    Images are specified by their configfile created by create-image.
*** drop-image
    unmounts and securely deletes the storage, expects the image
    configuration file, stored in $keyroot/.kchain/mounts/
*** make-udev-rule
    Prints out a suitable udev rule, for always linking the usb
    storage always to /dev/ukey, needed by kchain.

** Install
   With your USB stick plugged run while specifying the partition on
   which your keys are stored:
#+begin_src sh
make-udev-rule.sh /dev/sd?
#+end_src

   add /dev/mapper/ukey to /etc/pmount.allow
#+begin_src sh
# echo /dev/mapper/ukey >>/etc/pmount.allow
#+end_src

#+begin_src sh
mkdir -p ~/.cache/kchain/mounts/
#+end_src

#+begin_src sh
cat >~/.kchainrc <<EOT
LABEL=keys
MOUNTDIR=/media/\$LABEL
#+end_src

todo: finish
